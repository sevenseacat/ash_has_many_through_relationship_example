defmodule Example.Repo.Migrations.AddLandmarks do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:landmarks, primary_key: false) do
      add(:id, :uuid, null: false, default: fragment("uuid_generate_v7()"), primary_key: true)
      add(:name, :text, null: false)

      add(
        :city_id,
        references(:cities,
          column: :id,
          name: "landmarks_city_id_fkey",
          type: :uuid,
          prefix: "public"
        )
      )
    end

    create unique_index(:landmarks, [:name], name: "landmarks_name_index")
  end

  def down do
    drop_if_exists(unique_index(:landmarks, [:name], name: "landmarks_name_index"))

    drop(constraint(:landmarks, "landmarks_city_id_fkey"))

    drop(table(:landmarks))
  end
end
